---
layout: post
title: Postfix Configuration
date: 2012-06-26 12:47:00.000000000 +05:30
type: post
parent_id: '0'
published: true
password: ''
status: publish
categories: []
tags: []
meta:
  blogger_blog: ijuned.blogspot.com
  blogger_7553295648c4d8ebded8b8484926da00_permalink: '1714634848640657523'
---
<div dir="ltr" style="text-align:left;"><b>Postfix - the Sendmail Replacement </b><br />Postfix is a mail tranfer agent  (MTA) developed by Wietse Venema. It started out as an IBM project  called VMailer. Postfix has become very popular in the Linux world as an  alternative to the ubiquitous Sendmail program. It's much easier to  configure than Sendmail, whose configuration file has known to provoke  nightmares in small children and rookie <span class="IL_AD" id="IL_AD2">systems administrators<span class="IL_AD_ICON"></span></span>. For our system, we'll be compiling a special MySQL enhanced Postfix.<br />Advantage of Postfix<br />Reliability<br />Postfix  shows its real value when operating under stressful conditions. Even  within simple environments, software can encounter unexpected  conditions. For example, many <span class="IL_AD" id="IL_AD12">software systems<span class="IL_AD_ICON"></span></span> behave unpredictably when they run out of memory or disk space. Postfix  detects such conditions, and rather than make the problem worse, gives  the system a chance to recover. Regardless of hazards thrown its way,  Postfix takes every <span class="IL_AD" id="IL_AD5">precaution<span class="IL_AD_ICON"></span></span> to function in a stable and reliable way.<br />Security<br />Postfix  assumes it is running in a hostile environment. It employs multiple  layers of defense to protect against attackers. The security concept of  least <span class="IL_AD" id="IL_AD3">privilege<span class="IL_AD_ICON"></span></span> is employed throughout the Postfix system, so that each process, which  can be run within an isolated compartment, runs with the lowest set of <span class="IL_AD" id="IL_AD9">privileges<span class="IL_AD_ICON"></span></span> it needs. Processes running with higher privileges  never trust the unprivileged processes. Likewise, unneeded modules can  be disabled, enhancing security and simplifying an installation.<br />Performance<br />Postfix  was written with performance in mind and, in fact, takes steps to  ensure that its speed doesn't overwhelm other systems. It uses  techniques to limit both the number of new processes that have to be  created and the number of filesystem accesses required in processing  messages.<br />Flexibility<br />The Postfix system is actually made up of several different programs and subsystems. This <span class="IL_AD" id="IL_AD11">approach<span class="IL_AD_ICON"></span></span> allows for great flexibility. All of the pieces are easily tunable through straightforward configuration files.</p>
<p>Ease-of-use<br />Postfix  is one of the easier email packages to set up and administer, as it  uses straightforward configuration files and simple lookup tables for  address translations and forwarding. The idea behind Postfix's  configuration is the notion of least surprise, which means that, to the  extent it's possible, Postfix behaves the way most people expect. When  faced with design choices, Dr. Venema has opted for the decision that  seems most reasonable to most humans.</p>
<p>Compatibility with Sendmail<br />With  Sendmail compatibility, Postfix can easily replace Sendmail on a system  without forcing any changes on users or breaking any of the <span class="IL_AD" id="IL_AD8">applications<span class="IL_AD_ICON"></span></span> that depend on it. Postfix supports Sendmail <span class="IL_AD" id="IL_AD10">conventions<span class="IL_AD_ICON"></span></span> like /etc/aliases and .forward files. The Sendmail executable program,  sendmail, is replaced with a Postfix version that supports nearly all of  the same command-line arguments but runs in conjunction with the  Postfix system. While your Sendmail-dependent programs continue to work,  Postfix has been evolving independently of Sendmail, and doesn't  necessarily implement all email features in the same way.<br />Feature of Postfix<br />With  SMTP connection caching, Postfix can deliver multiple messages over the  same SMTP connection. By default, Postfix 2.2 reuses an SMTP connection  automatically when a destination has high volume of mail in the SMTP  Connection caching is a performance feature. Whether or not it actually  improves performance depends on the conditions:</p>
<p>Terminology<br />1) Mail Transfer Agent (MTA)<br />?Receives mail from or sends mail to other computers<br />?Talks with other MTAs and certain other agents<br />?Analogous to <span class="IL_AD" id="IL_AD7">post offices<span class="IL_AD_ICON"></span></span><br />?SMTP is the language of MTAs<br />?MTAs are security conscious<br />?Examples: Postfix, Sendmail, Exim</p>
<p>2) <span class="IL_AD" id="IL_AD4">Mail Delivery<span class="IL_AD_ICON"></span></span> Agent (MDA)<br />?Deposits received mail on the local computer<br />?Common storage formats are Mbox and Maildir<br />?Analogous to a mail carrier<br />?Usually invoked by an MTA<br />?Examples: Maildrop, Procmail</p>
<p>3) Mail User Agent (MUA)<br />?Mail client tool for composing, reading, searching, and archiving.<br />?Commonly understands SMTP, POP3, IMAP and local storage formats<br />?Examples: Mutt, KMail, Evolution, Pine, Mozilla Thunderbird, MS Outlook</p>
<p>4) SMTP (Simple Mail Transport Protocol) <br />?SMTP Used for sending message.<br />?It used for retrieve the message by either POP3 or IMAP<br />5) POP3 Server (Post Office Protocol)<br />?Provides for temporary storage and retrieval of mail<br />?Mail is usually deleted after retrieval<br />?Supported by most mail clients<br />?RFC 1939 and others define POP3<br />6) IMAP Server (Internet Message Access Protocol)<br />?Provides temporary and <span class="IL_AD" id="IL_AD6">long-term storage<span class="IL_AD_ICON"></span></span> and retrieval of mail<br />?More sophisticated than POP3<br />?Provides folders for organizing and archiving<br />?Supported by most mail clients</p>
<p>Postfix Installation<br />First,  Postfix will need a user on the system called 'postfix' and a group  called 'postdrop'. Before you do anything, create this user and group.<br />The Postfix source code is <span class="IL_AD" id="IL_AD1">available at http<span class="IL_AD_ICON"></span></span>://www.postfix.org/download.html.  Choose the latest version, which at the time of this writing is 2.2.  Untar the source in the directory you've chosen to work in. First, we'll  configure the source code to work well with MySQL and SASL. Issue the  following:<br />make makefiles 'CCARGS=-DHAS_MYSQL -I/usr/include/mysql \ <br />-DUSE_SASL_AUTH -I/usr/local/include/sasl' \<br />'AUXLIBS=-L/usr/lib/mysql -lmysqlclient -lz -lm -L/usr/local/lib -lsasl2'<br />If you didn't see any errors (and again, you shouldn't), you can now proceed to compile the postfix binaries. Do:<br />make install<br />This  could take a while, depending on your hardware. At the end of the  install process, you'll have to answer some questions. The first one  looks like this:<br />install_root: [/]</p>
<p>Please specify a directory for scratch files while installing Postfix. <br />You must have write permission in this directory.<br />tempdir: [/home/mike/mail_system/postfix-2.2] <br />There  will be several of these. The default answers should be fine. If you  need to change them, please answer appropriately for your setup.<br />Postfix Configuration<br />Postfix  will have created it's configuration files in the usual place, which is  /etc/postfix/. You'll need to open a file called 'main.cf' and make  some modifications and additions. I have found that the easiest way to  do this is to search for the lines that need modifying first and then  add the missing lines. The bottom line is that 'main.cf' should contain  the following lines. Modify and add so that it does.<br />home_mailbox = Maildir/<br />recipient_delimiter = +<br />mydestination = $myhostname, $transport_maps<br />alias_maps = mysql:/etc/postfix/mysql-aliases.cf<br />relocated_maps = mysql:/etc/postfix/mysql-relocated.cf<br />transport_maps = mysql:/etc/postfix/mysql-transport.cf<br />virtual_maps = mysql:/etc/postfix/mysql-virtual.cf<br />local_recipient_maps = $alias_maps $virtual_mailbox_maps unix:passwd.byname</p>
<p>virtual_mailbox_base = /home/vmail<br />virtual_mailbox_maps = mysql:/etc/postfix/mysql-virtual-maps.cf<br />virtual_uid_maps = mysql:/etc/postfix/mysql-virtual-uid.cf<br />virtual_gid_maps = mysql:/etc/postfix/mysql-virtual-gid.cf</p>
<p>queue_directory = /var/spool/postfix<br />command_directory = /usr/sbin<br />daemon_directory = /usr/libexec/postfix<br />mail_owner = postfix</p>
<p>myhostname = linux.ork<br />mydomain = sub.linux.ork<br />myorigin = $mydomain</p>
<p>unknown_local_recipient_reject_code = 550<br />debug_peer_level = 2<br />debugger_command = \<br />         PATH=/bin:/usr/bin:/usr/local/bin:/usr/X11R6/bin \<br />         xxgdb $daemon_directory/$process_name $process_id &amp; sleep 5 \<br />sendmail_path = /usr/sbin/sendmail<br />newaliases_path = /usr/bin/newaliases<br />mailq_path = /usr/bin/mailq<br />setgid_group = postdrop<br />html_directory = no<br />manpage_directory = /usr/local/man<br />sample_directory = /etc/postfix<br />readme_directory = no</p>
<p>broken_sasl_auth_clients = yes<br />smtpd_sasl_auth_enable = yes<br />smtpd_sasl_security_options = noanonymous<br />smtpd_recipient_restrictions = permit_sasl_authenticated, <br />         reject_unauth_destination<br />smtpd_sasl_local_domain = $myhostname<br />You'll also need to create these additional files in /etc/postfix/ so that MySQL and Postfix will work together:<br />mysql-aliases.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_alias<br />select_field = destination<br />where_field = alias<br />hosts = localhost<br />mysql-client.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_access<br />select_field = access<br />where_field = source<br />additional_conditions = and type = 'client'<br />hosts = localhost<br />mysql-recipient.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_access<br />select_field = access<br />where_field = source<br />additional_conditions = and type = 'recipient'<br />hosts = localhost<br />mysql-relocated.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_relocated<br />select_field = destination<br />where_field = email<br />hosts = localhost<br />mysql-sender.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_access<br />select_field = access<br />where_field = source<br />additional_conditions = and type = 'sender'<br />hosts = localhost<br />mysql-transport.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_transport<br />select_field = destination<br />where_field = domain<br />hosts = localhost<br />mysql-virtual.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_virtual<br />select_field = destination<br />where_field = email<br />hosts = localhost<br />mysql-virtual-gid.cf<br />user = postfix<br />password = XXXXXXX<br />dbname = postfix<br />table = postfix_users<br />select_field = gid<br />where_field = email<br />additional_conditions = and postfix = 'y'<br />hosts = localhost<br />mysql-virtual-uid.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_users<br />select_field = uid<br />where_field = email<br />additional_conditions = and postfix = 'y'<br />hosts = localhost<br />mysql-virtual-maps.cf<br />user = postfix<br />password = XXXXXXXX<br />dbname = postfix<br />table = postfix_users<br />select_field = maildir<br />where_field = email<br />additional_conditions = and postfix = 'y'<br />hosts = localhost<br />Finally,  we'll need to create a user and group called 'vmail'. In this system,  all of the mail will be stored in /home/vmail. Make sure this directory  exists. If not (depending on how you created this user), create it and  make sure that everything is owned by the user 'vmail' (chown -R  vmail:vmail /home/vmail).</p>
<p>Courier IMAP server<br />Courier IMAP is  the server we need to install so our users can pick up their mail. This  package also comes with a POP3 server as well. If you've already picked  up the source, you'll need to untar it in the directory we set aside for  this project.<br />Configuring, Compiling and Installing Courier IMAP<br />   You  must do the first step - the configuration of the source package as a  normal user. Courier IMAP is very explicit about this. If you begin to  do this as 'root', you will get a nasty message and you'll have to  remove the sources and start all over again. You should also read  00README_NOW_OR_SUFFER, an aptly named file.<br />First, you should issue this command to configure the source code for the system we're setting up.<br />./configure --prefix=/usr/local/courier --with-authmysql \<br />--with-mysql-libs=/usr/lib/mysql/ \<br />--with-mysql-includes=/usr/include/mysql --with-redhat<br />We're doing this on a Fedora Core system, so that last option refers to that (FC used to be RedHat).<br />Now you can switch to the root user for these last two commands:<br />make install<br />and<br />make install-configure<br />Courier IMAP configuration<br />One  of the files created is called 'authmysqlrc' and can be found in  /usr/local/courier/etc/. Make sure the following lines are in this file<br />MYSQL_SERVER localhost<br />MYSQL_USERNAME postfix<br />MYSQL_PASSWORD XXXXXXX<br />MYSQL_PORT 0<br />MYSQL_DATABASE postfix<br />MYSQL_USER_TABLE postfix_users<br />MYSQL_CLEAR_PWFIELD clear<br />MYSQL_UID_FIELD uid<br />MYSQL_GID_FIELD gid<br />MYSQL_LOGIN_FIELD email<br />MYSQL_HOME_FIELD homedir<br />MYSQL_MAILDIR_FIELD maildir<br />MYSQL_QUOTA_FIELD quota<br />  <br />NOTE<br />It's  very important that there is NO WHITE SPACE after these values. If  authentication isn't working when you try to pick up mail, this may be  the problem. Check for white space and tail your /var/mysql.log file to  see what values MySQL is looking for. Be particularly careful with  'MYSQL_USERNAME' and 'MYSQL_PASSWORD'<br />The other file we need to modify is: /usr/local/courier/etc/authdaemonrc Make sure it contains the following line:<br />authmodulelist="authmysql authpam"<br />Finally, we need to make two more small changes to two files. Find /usr/local/courier/etc/imapd and change the following line:<br />IMAPDSTART=YES<br />Then change /usr/local/courier/etc/pop3d<br />POP3DSTART=YES<br />That's the Courier IMAP setup.</p>
<p>Providing Services at Boot Time<br />You  will need to make sure that the machine starts all of these services at  boot time. First, well need to create a script to start Postfix. The  following will do nicely:<br />#!/bin/sh<br /># chkconfig: 345 40 60<br /># description: Postfix mail transfer agent (MTA) </p>
<p>case "$1" in<br />        start)<br />                echo -n "Starting Postfix"<br />                /usr/sbin/postfix start<br />                ;;</p>
<p>        stop)<br />                echo -n "Halting Postfix"<br />                /usr/sbin/postfix stop<br />                ;;</p>
<p>        reload)<br />                echo -n "Postfix reload"<br />                /usr/sbin/postfix reload<br />                ;;<br />        restart)<br />                $0 stop<br />                /usr/bin/sleep 1<br />                $0 start</p>
<p>  status)<br />                echo -n "Checking..."<br />                /usr/sbin/postfix check<br />                ;;<br />        *)<br />                echo "Usage: $0 {start|stop|reload|restart|status}"<br />                exit 1<br />        ;;<br />esac<br />Make this script executable and place it in /etc/init.d/<br />Here is a simple script for starting the Courier Authdaemon. If you need something more complicated, feel free to add to it.<br />#!/bin/sh</p>
<p># chkconfig:            345 80 20<br /># description:          IMAP Auth Daemon</p>
<p>case "$1" in<br />'start')<br />        if [ -f /usr/local/courier/libexec/authlib/authdaemond ]; then<br />                /usr/local/courier/libexec/authlib/authdaemond start<br />                echo "Starting Courier authdaemon"<br />        fi<br />        ;;</p>
<p>'stop')<br />        if [ -f /usr/local/courier/libexec/authlib/authdaemond ]; then<br />                /usr/local/courier/libexec/authlib/authdaemond stop<br />        fi<br />        ;;</p>
<p>*)<br />        echo "Usage: $0 { start | stop }"<br />        exit 1<br />        ;;<br />esac</p>
<p>exit 0<br />Again, make this script executable and place it in /etc/init.d/<br />Courier  IMAP comes with startup scripts for providing the authentication  service for mail pickup. Courier also comes with a POP3 daemon, so there  are two scripts that we'll need to copy to /etc/init.d/. These are  /usr/local/courier/libexec/imapd.rc and  /usr/local/courier/libexec/pop3d.rc. It's a good idea to rename them to  just imapd and pop3d. Once you have copied those files to /etc/init.d/,  we need to add two lines to each so that they'll be compatible with our  Fedora setup. If you're not using Fedora, you'll need to consult how  your system handles its start-up scripts. Add the following lines to the  'imapd' script after the '#!/bin/sh' part:<br /># chkconfig: 345 80 20 # description: Courier IMAP Daemon<br />Do the same for the 'pop3d' script, changing 'Courier IMAP' to 'Courier POP3'<br />Now  we're ready to add these services to the appropriate rcX.d directories.  This is done with the chkconfig --add script command. In our case, we  do the following:<br />chkconfig --add postfix<br />and do the same for the other three scripts. The next time you boot the machine, these services will start automatically.</div>
